/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var main = /** @class */ (function () {
	    function main(hot) {
	        this.hot = hot;
	    }
	    main.prototype.getSettings = function () {
	        return {
	            colWidths: this.getColWidths(),
	            rowHeights: this.getRowHeights()
	        };
	    };
	    main.prototype.getNumberOfColumns = function () {
	        return this.hot.getData()[0].length;
	    };
	    main.prototype.getNumberOfRows = function () {
	        return this.hot.getData().length;
	    };
	    main.prototype.getHorizontalArray = function () {
	        var array = [];
	        for (var c = 0; c < this.getNumberOfColumns(); c++) {
	            array.push({ column: c, row: 0 });
	        }
	        return array;
	    };
	    main.prototype.getVerticalArray = function () {
	        var array = [];
	        for (var c = 0; c < this.getNumberOfRows(); c++) {
	            array.push({ column: 0, row: c });
	        }
	        return array;
	    };
	    main.prototype.getColWidths = function () {
	        var _this = this;
	        var array = [];
	        this.getHorizontalArray().forEach(function (cell) {
	            array.push(_this.hot.getColWidth(cell.column));
	        });
	        return array;
	    };
	    main.prototype.getRowHeights = function () {
	        var _this = this;
	        var array = [];
	        this.getVerticalArray().forEach(function (cell) {
	            array.push(_this.hot.getRowHeight(cell.row) || 23);
	        });
	        return array;
	    };
	    return main;
	}());
	exports.main = main;
	window.HandsontableMeta = main;


/***/ }
/******/ ]);